name: Tests and Code Coverage
on:
  push:
    branches:
      - $default-branch
      - github-actions-setup
  pull_request:
    branches:
      - $default-branch
jobs:
  web-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./web/package-lock.json
      - name: Install Dependencies
        run: npm install
        working-directory: ./web
      - name: Run Tests
        run: npm test -- --coverage --passWithNoTests
        working-directory: ./web
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: GiessC/in-control
  infrastructure-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./infra/package-lock.json
      - name: Install Dependencies
        run: npm install
        working-directory: ./infra
      - name: Run Tests
        run: npm test -- --coverage --passWithNoTests
        working-directory: ./infra
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: GiessC/in-control
  api-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8
      - uses: nuget/setup-nuget@v2
      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Install Dependencies
        run: nuget restore InControl.sln
        working-directory: ./api
      - name: Build
        run: dotnet build --no-restore --configuration Release /p:ContinuousIntegrationBuild=true
        working-directory: ./api
      - name: Run Tests
        run: dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        working-directory: ./api
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: GiessC/in-control

